/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package ai_firstproject;

import java.awt.Color;
import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;
import javax.swing.JButton;


/**
 *
 * @author User
 */

public class fourConnect extends javax.swing.JFrame{

    JButton row1[];
    JButton row2[];
    JButton row3[];
    JButton row4[];
    JButton row5[];
    JButton row6[];
    JButton row7[];
    int counter1=0;
    int counter2=0;
    int counter3=0;
    int counter4=0;
    int counter5=0;
    int counter6=0;
    int counter7=0;
    Color player;
    boolean flag=true;
    char game[][]=new char[6][7];
    int gameType = 0; 
    String level = ""; 
    private int test;
 
    /**
     * Creates new form fourConnect
     */
    public fourConnect() {
        initComponents();
        twoPlayersRB.setSelected(true);
        row1=new JButton[7];

        row1[0]=r1c1; 
       Hardness.setVisible(false);

//          row1[1]=r1c2; 
//          row1[2]=r1c3; 
//          row1[3]=r1c4; 
//          row1[4]=r1c5; 
//          row1[5]=r1c6; 
//          row1[6]=r1c7; 
      for(int i=0;i<7;i++){
          for(int j=0;j<6;j++){
              game[j][i]='n';
          }
      }
      onePlayerRB.setActionCommand("one"); 
      twoPlayersRB.setActionCommand("two"); 



    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        buttonGroup1 = new javax.swing.ButtonGroup();
        buttonGroup2 = new javax.swing.ButtonGroup();
        onePlayerRB = new javax.swing.JRadioButton();
        twoPlayersRB = new javax.swing.JRadioButton();
        panel1 = new java.awt.Panel();
        r1c1 = new javax.swing.JButton();
        r1c2 = new javax.swing.JButton();
        r2c2 = new javax.swing.JButton();
        r2c1 = new javax.swing.JButton();
        r1c3 = new javax.swing.JButton();
        r1c4 = new javax.swing.JButton();
        r1c5 = new javax.swing.JButton();
        r1c7 = new javax.swing.JButton();
        r1c6 = new javax.swing.JButton();
        r2c4 = new javax.swing.JButton();
        r3c1 = new javax.swing.JButton();
        r2c5 = new javax.swing.JButton();
        r5c7 = new javax.swing.JButton();
        r2c3 = new javax.swing.JButton();
        r3c3 = new javax.swing.JButton();
        r2c7 = new javax.swing.JButton();
        r2c6 = new javax.swing.JButton();
        r3c2 = new javax.swing.JButton();
        r3c4 = new javax.swing.JButton();
        r3c5 = new javax.swing.JButton();
        r3c6 = new javax.swing.JButton();
        r3c7 = new javax.swing.JButton();
        r4c5 = new javax.swing.JButton();
        r4c6 = new javax.swing.JButton();
        r4c4 = new javax.swing.JButton();
        r4c3 = new javax.swing.JButton();
        r5c3 = new javax.swing.JButton();
        r4c1 = new javax.swing.JButton();
        r6c7 = new javax.swing.JButton();
        r4c7 = new javax.swing.JButton();
        r6c6 = new javax.swing.JButton();
        r6c5 = new javax.swing.JButton();
        r6c1 = new javax.swing.JButton();
        r4c2 = new javax.swing.JButton();
        r5c4 = new javax.swing.JButton();
        r5c5 = new javax.swing.JButton();
        r5c6 = new javax.swing.JButton();
        r6c3 = new javax.swing.JButton();
        r6c2 = new javax.swing.JButton();
        r5c1 = new javax.swing.JButton();
        r5c2 = new javax.swing.JButton();
        r6c4 = new javax.swing.JButton();
        Hardness = new javax.swing.JComboBox<>();
        jLabel1 = new javax.swing.JLabel();
        winnerr = new javax.swing.JLabel();
        startButton = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        buttonGroup1.add(onePlayerRB);
        onePlayerRB.setText("One Player");
        onePlayerRB.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                onePlayerRBActionPerformed(evt);
            }
        });

        buttonGroup1.add(twoPlayersRB);
        twoPlayersRB.setText("Two Players");
        twoPlayersRB.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                twoPlayersRBActionPerformed(evt);
            }
        });

        r1c1.setText(" ");
        r1c1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                r1c1ActionPerformed(evt);
            }
        });

        r1c2.setText(" ");
        r1c2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                r1c2ActionPerformed(evt);
            }
        });

        r2c2.setText(" ");

        r2c1.setText(" ");

        r1c3.setText(" ");
        r1c3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                r1c3ActionPerformed(evt);
            }
        });

        r1c4.setText(" ");
        r1c4.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                r1c4ActionPerformed(evt);
            }
        });

        r1c5.setText(" ");
        r1c5.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                r1c5ActionPerformed(evt);
            }
        });

        r1c7.setText(" ");
        r1c7.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                r1c7ActionPerformed(evt);
            }
        });

        r1c6.setText(" ");
        r1c6.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                r1c6ActionPerformed(evt);
            }
        });

        r2c4.setText(" ");

        r3c1.setText(" ");

        r2c5.setText(" ");

        r5c7.setText(" ");

        r2c3.setText(" ");

        r3c3.setText(" ");

        r2c7.setText(" ");

        r2c6.setText(" ");

        r3c2.setText(" ");

        r3c4.setText(" ");

        r3c5.setText(" ");

        r3c6.setText(" ");

        r3c7.setText(" ");

        r4c5.setText(" ");

        r4c6.setText(" ");

        r4c4.setText(" ");

        r4c3.setText(" ");

        r5c3.setText(" ");
        r5c3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                r5c3ActionPerformed(evt);
            }
        });

        r4c1.setText(" ");

        r6c7.setText(" ");

        r4c7.setText(" ");

        r6c6.setText(" ");

        r6c5.setText(" ");

        r6c1.setText(" ");

        r4c2.setText(" ");

        r5c4.setText(" ");

        r5c5.setText(" ");

        r5c6.setText(" ");
        r5c6.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                r5c6ActionPerformed(evt);
            }
        });

        r6c3.setText(" ");

        r6c2.setText(" ");

        r5c1.setText(" ");

        r5c2.setText(" ");

        r6c4.setText(" ");

        javax.swing.GroupLayout panel1Layout = new javax.swing.GroupLayout(panel1);
        panel1.setLayout(panel1Layout);
        panel1Layout.setHorizontalGroup(
            panel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(panel1Layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(panel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(r3c1, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(r4c1, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(r5c1, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(r2c1, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(r1c1, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(r6c1, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(panel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(r3c2, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(r4c2, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(r5c2, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(r2c2, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(r1c2, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(r6c2, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(panel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(r3c3, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(r4c3, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(r5c3, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(r2c3, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(r1c3, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(r6c3, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(panel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(r3c4, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(r4c4, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(r5c4, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(r2c4, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(r1c4, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(r6c4, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(panel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(r3c5, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(r4c5, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(r5c5, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(r2c5, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(r1c5, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(r6c5, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(panel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(r3c6, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(r4c6, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(r5c6, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(r2c6, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(r1c6, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(r6c6, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(panel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(r6c7, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(r3c7, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(r4c7, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(r5c7, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(r2c7, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(r1c7, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(6, 6, 6))
        );
        panel1Layout.setVerticalGroup(
            panel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, panel1Layout.createSequentialGroup()
                .addGap(0, 26, Short.MAX_VALUE)
                .addGroup(panel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(panel1Layout.createSequentialGroup()
                        .addComponent(r6c3, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(r5c3, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(r4c3, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(r3c3, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(r2c3, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(r1c3, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(panel1Layout.createSequentialGroup()
                        .addComponent(r6c4, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(r5c4, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(r4c4, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(r3c4, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(r2c4, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(r1c4, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(panel1Layout.createSequentialGroup()
                        .addComponent(r6c5, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(r5c5, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(r4c5, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(r3c5, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(r2c5, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(r1c5, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(panel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                        .addGroup(panel1Layout.createSequentialGroup()
                            .addComponent(r6c6, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                            .addComponent(r5c6, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                            .addComponent(r4c6, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                            .addComponent(r3c6, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                            .addComponent(r2c6, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                            .addComponent(r1c6, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGroup(panel1Layout.createSequentialGroup()
                            .addComponent(r6c7, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                            .addComponent(r5c7, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                            .addComponent(r4c7, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                            .addComponent(r3c7, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                            .addComponent(r2c7, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                            .addComponent(r1c7, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGroup(panel1Layout.createSequentialGroup()
                            .addGroup(panel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                .addComponent(r6c1, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(r6c2, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                            .addGroup(panel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                .addComponent(r5c1, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(r5c2, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                            .addGroup(panel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                .addComponent(r4c1, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(r4c2, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                            .addGroup(panel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                .addComponent(r3c1, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(r3c2, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                            .addGroup(panel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                .addComponent(r2c2, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(r2c1, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                            .addGroup(panel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                .addComponent(r1c1, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(r1c2, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE)))))
                .addGap(17, 17, 17))
        );

        Hardness.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Easy", "Medium", "Hard" }));
        Hardness.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                HardnessActionPerformed(evt);
            }
        });

        jLabel1.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        jLabel1.setText("Four Connect Game");

        winnerr.setText("  ");

        startButton.setText("Start Game");
        startButton.setActionCommand("");
        startButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                startButtonActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addGap(24, 24, 24)
                .addComponent(panel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 63, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addComponent(onePlayerRB, javax.swing.GroupLayout.PREFERRED_SIZE, 90, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(twoPlayersRB)
                        .addGap(26, 26, 26))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addComponent(winnerr, javax.swing.GroupLayout.PREFERRED_SIZE, 134, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(65, 65, 65))
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(Hardness, 0, 122, Short.MAX_VALUE)
                            .addComponent(startButton, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                        .addContainerGap())))
            .addGroup(layout.createSequentialGroup()
                .addGap(148, 148, 148)
                .addComponent(jLabel1)
                .addGap(0, 0, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(74, 74, 74)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(twoPlayersRB, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(onePlayerRB, javax.swing.GroupLayout.PREFERRED_SIZE, 37, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(Hardness, javax.swing.GroupLayout.PREFERRED_SIZE, 33, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(startButton)
                .addGap(65, 65, 65)
                .addComponent(winnerr, javax.swing.GroupLayout.PREFERRED_SIZE, 33, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
            .addGroup(layout.createSequentialGroup()
                .addGap(20, 20, 20)
                .addComponent(jLabel1, javax.swing.GroupLayout.DEFAULT_SIZE, 30, Short.MAX_VALUE)
                .addGap(1, 1, 1)
                .addComponent(panel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(19, 19, 19))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void onePlayerRBActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_onePlayerRBActionPerformed
        // TODO add your handling code here:
        
        Hardness.setVisible(true);
    }//GEN-LAST:event_onePlayerRBActionPerformed

    private void r5c6ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_r5c6ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_r5c6ActionPerformed

    private void r5c3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_r5c3ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_r5c3ActionPerformed
    public void forthColumn (){
        counter4++;
        if(flag==true){
            player=Color.red;
            game[6-counter4][3]='r';
        }
        else {
            player=Color.blue;
            game[6-counter4][3]='b';

        }
        if(counter4==1){
            //System.out.print(player);

            r1c4.setBackground(player);
            //r1c1.setOpaque(true);      
        }
        
        else if(counter4==2){
            //System.out.print(player);

            r2c4.setBackground(player);
            //r2c1.setOpaque(true);
        }
        else if(counter4==3){
            //System.out.print(player);

            r3c4.setBackground(player);
            //r3c1.setOpaque(true);

            
        }
        else if(counter4==4){
            //System.out.print(player);

            r4c4.setBackground(player);
            //r4c1.setOpaque(true);
            
        }
        else if(counter4==5){
            //System.out.print(player);

            r5c4.setBackground(player);
            //r5c1.setOpaque(true);
            
        }        
        else if(counter4==6){
            //System.out.print(player);

            r6c4.setBackground(player);
            //r6c1.setOpaque(true);
            
        }         
     
        char winner=check();

        flag=!flag;
          if(gameType ==1 && flag ==true && winner == 'h' ){
            evaluate(); 
        }
    }
    private void r1c4ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_r1c4ActionPerformed
        // TODO add your handling code here:
        forthColumn(); 
    }//GEN-LAST:event_r1c4ActionPerformed
    public void seventhColumn (){
        counter7++;
        if(flag==true){
            player=Color.red;
            game[6-counter7][6]='r';
        }
        else {
            player=Color.blue;
            game[6-counter7][6]='b';

        }
        if(counter7==1){
            //System.out.print(player);

            r1c7.setBackground(player);
            //r1c1.setOpaque(true);      
        }
        
        else if(counter7==2){
            //System.out.print(player);

            r2c7.setBackground(player);
            //r2c1.setOpaque(true);
        }
        else if(counter7==3){
            //System.out.print(player);

            r3c7.setBackground(player);
            //r3c1.setOpaque(true);

            
        }
        else if(counter7==4){
            //System.out.print(player);

            r4c7.setBackground(player);
            //r4c1.setOpaque(true);
            
        }
        else if(counter7==5){
            //System.out.print(player);

            r5c7.setBackground(player);
            //r5c1.setOpaque(true);
            
        }        
        else if(counter7==6){
            //System.out.print(player);

            r6c7.setBackground(player);
            //r6c1.setOpaque(true);
            
        }         
     
        char winner=check();

        flag=!flag;
          if(gameType ==1 && flag ==true && winner == 'h' ){
            evaluate(); 
        }
    }

    private void r1c7ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_r1c7ActionPerformed
        // TODO add your handling code here:
          seventhColumn();
    }//GEN-LAST:event_r1c7ActionPerformed

    private void HardnessActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_HardnessActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_HardnessActionPerformed
    public void firstColumn (){
        
        counter1++;
        if (counter1<7){
        if(flag==true){
            player=Color.red;
            game[6-counter1][0]='r';
        }
        else {
            player=Color.blue;
            game[6-counter1][0]='b';

        }
         }
        if(counter1==1){
            //System.out.print(player);

            r1c1.setBackground(player);
            //r1c1.setOpaque(true);      
        }
        
        else if(counter1==2){
            //System.out.print(player);

            r2c1.setBackground(player);
            //r2c1.setOpaque(true);
        }
        else if(counter1==3){
            //System.out.print(player);

            r3c1.setBackground(player);
            //r3c1.setOpaque(true);

            
        }
        else if(counter1==4){
            //System.out.print(player);

            r4c1.setBackground(player);
            //r4c1.setOpaque(true);
            
        }
        else if(counter1==5){
            //System.out.print(player);

            r5c1.setBackground(player);
            //r5c1.setOpaque(true);
            
        }        
        else if(counter1==6){
            //System.out.print(player);

            r6c1.setBackground(player);
            //r6c1.setOpaque(true);
           

          
        }
         char winner=check();
         flag=!flag;
         if(gameType ==1 && flag ==true && winner == 'h' ){
            evaluate(); 
        }   
                
     
    }
    private void r1c1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_r1c1ActionPerformed
        // TODO add your handling code here:
        //System.out.print("in action performed");
        
        firstColumn(); 
        
    
      
    }//GEN-LAST:event_r1c1ActionPerformed
    public void secondColumn (){
          counter2++;
          if(counter2<7){
        if(flag==true){
            player=Color.red;
            game[6-counter2][1]='r';
        }
        else {
            player=Color.blue;
            game[6-counter2][1]='b';

        }
          }
        if(counter2==1){
            //System.out.print(player);

            r1c2.setBackground(player);
            //r1c1.setOpaque(true);      
        }
        
        else if(counter2==2){
            //System.out.print(player);

            r2c2.setBackground(player);
            //r2c1.setOpaque(true);
        }
        else if(counter2==3){
            //System.out.print(player);

            r3c2.setBackground(player);
            //r3c1.setOpaque(true);

            
        }
        else if(counter2==4){
            //System.out.print(player);

            r4c2.setBackground(player);
            //r4c1.setOpaque(true);
            
        }
        else if(counter2==5){
            //System.out.print(player);

            r5c2.setBackground(player);
            //r5c1.setOpaque(true);
            
        }        
        else if(counter2==6){
            //System.out.print(player);

            r6c2.setBackground(player);
            //r6c1.setOpaque(true);
            
        }         
     
        char winner=check();

        flag=!flag;
         if(gameType ==1 && flag ==true && winner == 'h'){
            evaluate(); 
        }
    }
    private void r1c2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_r1c2ActionPerformed
        // TODO add your handling code here:
             secondColumn();
    }//GEN-LAST:event_r1c2ActionPerformed
    public void thirdColumn(){
         counter3++;
         if(counter3<7){
        if(flag==true){
            player=Color.red;
            game[6-counter3][2]='r';
        }
        else {
            player=Color.blue;
            game[6-counter3][2]='b';

        }
         }
        if(counter3==1){
            //System.out.print(player);

            r1c3.setBackground(player);
            //r1c1.setOpaque(true);      
        }
        
        else if(counter3==2){
            //System.out.print(player);

            r2c3.setBackground(player);
            //r2c1.setOpaque(true);
        }
        else if(counter3==3){
            //System.out.print(player);

            r3c3.setBackground(player);
            //r3c1.setOpaque(true);

            
        }
        else if(counter3==4){
            //System.out.print(player);

            r4c3.setBackground(player);
            //r4c1.setOpaque(true);
            
        }
        else if(counter3==5){
            //System.out.print(player);

            r5c3.setBackground(player);
            //r5c1.setOpaque(true);
            
        }        
        else if(counter3==6){
            //System.out.print(player);

            r6c3.setBackground(player);
            //r6c1.setOpaque(true);
            
        }         
     
        char winner=check();

        flag=!flag;
        if(gameType ==1 && flag ==true && winner == 'h'){
            evaluate(); 
        }
    }
    private void r1c3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_r1c3ActionPerformed
        // TODO add your handling code here:
                thirdColumn(); 
    }//GEN-LAST:event_r1c3ActionPerformed
    public void fifthColumn(){
         counter5++;
         if(counter5<7){
        if(flag==true){
            player=Color.red;
            game[6-counter5][4]='r';
        }
        else {
            player=Color.blue;
            game[6-counter5][4]='b';

        }
        }
        if(counter5==1){
            //System.out.print(player);

            r1c5.setBackground(player);
            //r1c1.setOpaque(true);      
        }
        
        else if(counter5==2){
            //System.out.print(player);

            r2c5.setBackground(player);
            //r2c1.setOpaque(true);
        }
        else if(counter5==3){
            //System.out.print(player);

            r3c5.setBackground(player);
            //r3c1.setOpaque(true);

            
        }
        else if(counter5==4){
            //System.out.print(player);

            r4c5.setBackground(player);
            //r4c1.setOpaque(true);
            
        }
        else if(counter5==5){
            //System.out.print(player);

            r5c5.setBackground(player);
            //r5c1.setOpaque(true);
            
        }        
        else if(counter5==6){
            //System.out.print(player);

            r6c5.setBackground(player);
            //r6c1.setOpaque(true);
            
        }         
     
        char winner=check();

        flag=!flag;
          if(gameType ==1 && flag ==true && winner == 'h'){
            evaluate(); 
        }
    }
    private void r1c5ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_r1c5ActionPerformed
        // TODO add your handling code here:
         fifthColumn();
    }//GEN-LAST:event_r1c5ActionPerformed
    public void sixthColumn (){
        counter6++;
        if(flag==true){
            player=Color.red;
            game[6-counter6][5]='r';
        }
        else {
            player=Color.blue;
            game[6-counter6][5]='b';

        }
        if(counter6==1){
            //System.out.print(player);

            r1c6.setBackground(player);
            //r1c1.setOpaque(true);      
        }
        
        else if(counter6==2){
            //System.out.print(player);

            r2c6.setBackground(player);
            //r2c1.setOpaque(true);
        }
        else if(counter6==3){
            //System.out.print(player);

            r3c6.setBackground(player);
            //r3c1.setOpaque(true);

            
        }
        else if(counter6==4){
            //System.out.print(player);

            r4c6.setBackground(player);
            //r4c1.setOpaque(true);
            
        }
        else if(counter6==5){
            //System.out.print(player);

            r5c6.setBackground(player);
            //r5c1.setOpaque(true);
            
        }        
        else if(counter6==6){
            //System.out.print(player);

            r6c6.setBackground(player);
            //r6c1.setOpaque(true);
            
        }         
     
        char winner=check();

        flag=!flag;
          if(gameType ==1 && flag ==true && winner == 'h'){
            evaluate(); 
        }
    }
    private void r1c6ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_r1c6ActionPerformed
        // TODO add your handling code here:
          sixthColumn();  
    }//GEN-LAST:event_r1c6ActionPerformed

    private void startButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_startButtonActionPerformed
        // TODO add your handling code here:
        System.out.println(buttonGroup1.getSelection().getActionCommand());
        String s = buttonGroup1.getSelection().getActionCommand(); 
        if (s.equalsIgnoreCase("one")) {
            gameType = 1;
            level = Hardness.getSelectedItem().toString(); 
                flag = true;
                int choose = 0;
                if (level.equalsIgnoreCase("easy")){
                 choose =(int)Math.ceil(Math.random()*6 +1);}
                else {
                 choose =(int)Math.ceil(Math.random()*2 +2);   
                }
                if (choose ==1 ) firstColumn();  
                else if (choose ==2 ) secondColumn(); 
                else if (choose ==3) thirdColumn(); 
                else if (choose ==4) forthColumn(); 
                else if (choose ==5) fifthColumn(); 
                else if (choose ==6) sixthColumn();
                else if (choose ==7) seventhColumn(); 
               
        //System.out.println(level); 
        }
        else if (s.equalsIgnoreCase("two")) gameType = 2; 
        
    }//GEN-LAST:event_startButtonActionPerformed

    private void twoPlayersRBActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_twoPlayersRBActionPerformed
        // TODO add your handling code here:
        Hardness.setVisible(false);
    }//GEN-LAST:event_twoPlayersRBActionPerformed

    
    private void ActionPerformed(java.awt.event.ActionEvent evt) {                                              
        // TODO add your handling code here:
    } 
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(fourConnect.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(fourConnect.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(fourConnect.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(fourConnect.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new fourConnect().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JComboBox<String> Hardness;
    private javax.swing.ButtonGroup buttonGroup1;
    private javax.swing.ButtonGroup buttonGroup2;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JRadioButton onePlayerRB;
    private java.awt.Panel panel1;
    public javax.swing.JButton r1c1;
    private javax.swing.JButton r1c2;
    private javax.swing.JButton r1c3;
    private javax.swing.JButton r1c4;
    private javax.swing.JButton r1c5;
    private javax.swing.JButton r1c6;
    private javax.swing.JButton r1c7;
    private javax.swing.JButton r2c1;
    private javax.swing.JButton r2c2;
    private javax.swing.JButton r2c3;
    private javax.swing.JButton r2c4;
    private javax.swing.JButton r2c5;
    private javax.swing.JButton r2c6;
    private javax.swing.JButton r2c7;
    private javax.swing.JButton r3c1;
    private javax.swing.JButton r3c2;
    private javax.swing.JButton r3c3;
    private javax.swing.JButton r3c4;
    private javax.swing.JButton r3c5;
    private javax.swing.JButton r3c6;
    private javax.swing.JButton r3c7;
    private javax.swing.JButton r4c1;
    private javax.swing.JButton r4c2;
    private javax.swing.JButton r4c3;
    private javax.swing.JButton r4c4;
    private javax.swing.JButton r4c5;
    private javax.swing.JButton r4c6;
    private javax.swing.JButton r4c7;
    private javax.swing.JButton r5c1;
    private javax.swing.JButton r5c2;
    private javax.swing.JButton r5c3;
    private javax.swing.JButton r5c4;
    private javax.swing.JButton r5c5;
    private javax.swing.JButton r5c6;
    private javax.swing.JButton r5c7;
    private javax.swing.JButton r6c1;
    private javax.swing.JButton r6c2;
    private javax.swing.JButton r6c3;
    private javax.swing.JButton r6c4;
    private javax.swing.JButton r6c5;
    private javax.swing.JButton r6c6;
    private javax.swing.JButton r6c7;
    private javax.swing.JButton startButton;
    private javax.swing.JRadioButton twoPlayersRB;
    public javax.swing.JLabel winnerr;
    // End of variables declaration//GEN-END:variables

    private char check() {
        String w="";
         for(int j=0;j<6;j++){
          for(int i=0;i<7;i++){
              if(game[j][i]=='n'){
                  continue;
              }
              char tmp=game[j][i];
                   if(tmp=='b'){
                      w="Blue";
                  }
                  else if(tmp=='r'){
                      w="Red";
                  }
              if(i<=3){
                  
                  if(game[j][i+1]==tmp&&game[j][i+2]==tmp&&game[j][i+3]==tmp){
                      winnerr.setText(w +" is the winner!");
                      System.out.print(w+" is the winner!");
                      return tmp;
                  }
              }
              
              if(j<=2){
                  
                  if(game[j+1][i]==tmp&&game[j+2][i]==tmp&&game[j+3][i]==tmp){
                      winnerr.setText(w +" is the winner!");
                      System.out.print(w+" is winner");
                      return tmp;
                  }
              }
              
               if(j<=2&&i<=3){
                  
                  if(game[j+1][i+1]==tmp&&game[j+2][i+2]==tmp&&game[j+3][i+3]==tmp){
                      winnerr.setText(w +" is the winner!");
                      System.out.print(w+" is winner");
                      return tmp;
                  }
              }
               
                 if(j<=2&&i>=3){
                 
                  if(game[j+1][i-1]==tmp&&game[j+2][i-2]==tmp&&game[j+3][i-3]==tmp){
                      winnerr.setText(w +" is the winner!");
                      System.out.print(w+" is winner");
                      return tmp;
                  }
              }
          }
      }
         return 'h';
    }
    private void evaluate(){
        
        int moveToMake = -1; 
        Node n = new Node (game);
        if (n.isTerminalNode()){
            winnerr.setText("Draw!");
            return;
        }
        n.makeChildren('r');
       
        if (level.equalsIgnoreCase("hard")){
           for (Node child: n.children){
               child.makeChildren('b');
           }
           for (int i =0; i< n.children.size(); i++){
               for(Node ch: n.children.elementAt(i).children){
                   ch.makeChildren('r');
               }
           }
 
           int v= alphabeta(n,3, -1000000, 1000000, true);
           moveToMake = test; 
          // moveToMake=chooseBestGrandchild(n);
           System.out.println("Move to make:" + moveToMake); 


        
        }
      
        else{
         moveToMake = n.chooseBestChild(level); 
        }
                if (moveToMake == 0 ) firstColumn();  
                else if (moveToMake ==1 ) secondColumn(); 
                else if (moveToMake ==2) thirdColumn(); 
                else if (moveToMake ==3) forthColumn(); 
                else if (moveToMake ==4) fifthColumn(); 
                else if (moveToMake ==5) sixthColumn();
                else if (moveToMake ==6) seventhColumn(); 
        }
//    @Override
//    public void actionPerformed(ActionEvent e) {
//    System.out.print("button1");
//    }

     int alphabeta(Node node, int depth, int alpha , int bita, boolean maximizingPlayer){
        if (depth == 0 || node.isTerminalNode()){
            if(node.isTerminalNode()) System.out.println("terminal node");
            test = node.move; 
            //System.out.println(node.evaluateFunction());
            return node.evaluateFunctionHard();
                
                }
        if (maximizingPlayer){ 
            int v = -1000000; 
            for (Node child: node.children){
            int v1 = alphabeta(child, depth-1, alpha, bita, false);
               if(v1>v){
                    test = child.move; 
                    v = v1;
               }
            
             alpha = Math.max(alpha, v); 
             if (bita<= alpha) break; 
          
            }
           
             
            // System.out.println(test);
             return v; 
        }
        else {
              int v = 1000000; 
              for (Node child: node.children){
                  int v1 = alphabeta(child, depth-1, alpha, bita, true);
                  if(v1<v){
                      v = v1; 
                      test = child.move; 
                  }
                bita = Math.min(bita, v);
                 
                if (bita<= alpha) break;
                }
              // System.out.println(test);
               return v; 
                }
    
       }
     
     
     int chooseBestGrandchild(Node n) {
        int max = -10000; 
        int min = 10000;
        int e = -10000;
        Node c=null;
        Node c2=null;

        Node bestGrandchild= null; 
        for(int i=0;i<n.children.size();i++){
           
        for (int j=0;j<n.children.elementAt(i).children.size();j++){
            c = n.children.elementAt(i).children.elementAt(j);
            e =  c.evaluateFunction(); 
           if (e<min){
               min = e;
               c2= c;
           }       
        }
        
        e=min;
        //c2=c;
        if (e>max){
               max = e;
               bestGrandchild= c2;
        }
        
        }
           return bestGrandchild.move;
    }
    
}
